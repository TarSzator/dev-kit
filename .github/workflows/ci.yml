name: CI

on:
  push:
    branches:
      - master
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ./node_modules
            ~/.npm
            ~/.npmrc
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Set .npmrc
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - name: Install node modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
  unit-test:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ./node_modules
            ~/.npm
            ~/.npmrc
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Run unit tests
        run: npm run test:ci

  code-duplication:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ./node_modules
            ~/.npm
            ~/.npmrc
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Detect duplicate code
        run: npm run jscpd:ci
  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ./node_modules
            ~/.npm
            ~/.npmrc
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Build
        run: npm run build
      - name: Cache build result
        if: startsWith( github.ref, 'refs/tags/')
        id: build-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-working-directory
        with:
          path: |
            ./.*
            ./*
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
  deploy:
    if: startsWith( github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - name: Load cached build result
        id: build-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-working-directory
        with:
          path: |
            ./.*
            ./*
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - run: npm publish --public
